name: Build macOS (INTEL and ARM) and Release

on:
  push:
    branches:
      - main
    paths:
      - '**/*.json'
      - '**/*.py'
      - '**/*.yml'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        arch: [intel, arm]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build macOS app
      run: |
        if [[ "${{ matrix.arch }}" == "intel" ]]; then
          pyinstaller --name 'MyAmpSwitcher' \
                      --icon 'icon.icns' \
                      --noconsole  \
                      --windowed  \
                      --add-data './settings.json:.' \
                      --add-data './icon.icns:.' \
                      --add-data './profiles/*:profiles' \
                      --additional-hooks-dir='./' \
                      --hidden-import mido.backends.rtmidi \
                      --hidden-import pyqt5 \
                      MyAmpSwitcher.py
        elif [[ "${{ matrix.arch }}" == "arm" ]]; then
          # Add commands for building for Apple Silicon
          # You might need to adjust the pyinstaller options accordingly
          echo "Building for Apple Silicon"
        fi

    - name: Create DMG
      run: |
        mkdir -p dist/dmg
        cp -r "dist/MyAmpSwitcher.app" dist/dmg

        create-dmg \
          --volname "MyAmpSwitcher" \
          --volicon "icon.ico" \
          --window-pos 200 120 \
          --window-size 600 300 \
          --icon-size 100 \
          --icon "MyAmpSwitcher.app" 175 120 \
          --hide-extension "MyAmpSwitcher.app" \
          --app-drop-link 425 120 \
          "dist/MyAmpSwitcher.dmg" \
          "dist/dmg/"
          
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v2
      with:
        name: MyAmpSwitcher_macOS_${{ matrix.arch }}
        path: dist

  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Download macOS artifacts
        uses: actions/download-artifact@v2
        with:
          name: MyAmpSwitcher_macOS_*

      - name: Remove old macOS artifacts
        run: |
          if [ -f dist/MyAmpSwitcher_macOS.zip ]; then
            ls -1 | grep '_macOS.zip$' | sort -r | tail -n +3 | xargs rm -rf
          fi
