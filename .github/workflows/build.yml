name: Build macOS and Windows Apps

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        ${{ matrix.os == 'macos-latest' && 'pip install py2app' || 'pip install pyinstaller' }}

    - name: Build
      run: |
        ${{ matrix.os == 'macos-latest' && 'python setup.py py2app' || 'pyinstaller --onefile MyAmpSwitcher.py && mv dist/MyAmpSwitcher dist/MyAmpSwitcher.exe' }}

    - name: Zip
      run: |
        cd dist
        ${{ matrix.os == 'macos-latest' && 'zip -r MyAmpSwitcher_macOS.zip MyAmpSwitcher.app' || 'zip MyAmpSwitcher_Windows.zip MyAmpSwitcher.exe' }}

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os == 'macos-latest' && 'MyAmpSwitcher_macOS' || 'MyAmpSwitcher_Windows' }}
        path: dist
        
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Download macOS artifacts
        uses: actions/download-artifact@v2
        with:
          name: MyAmpSwitcher_macOS

      - name: Remove old macOS artifacts
        run: |
          if [ -f dist/MyAmpSwitcher_macOS.zip ]; then
            ls -1 | grep '_macOS.zip$' | sort -r | tail -n +3 | xargs rm -rf
          fi

      - name: Download Windows artifacts
        uses: actions/download-artifact@v2
        with:
          name: MyAmpSwitcher_Windows

      - name: Remove old Windows artifacts
        run: |
          if [ -f dist/MyAmpSwitcher_Windows.zip ]; then
            ls -1 | grep '_Windows.zip$' | sort -r | tail -n +3 | xargs rm -rf
          fi
